# Makefile.in generated by automake 1.13.4 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#                                                          -*- Automake -*-
# Makefile for ABINIT
# Generated by make-makefiles-fallbacks on 2018/11/12 20:33:34 +0000

#
# IMPORTANT NOTE
#
# Any manual change to this file will systematically be overwritten.
# Please modify the make-makefiles-fallbacks script or its config file instead.
#

am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/abinit-fallbacks
pkgincludedir = $(includedir)/abinit-fallbacks
pkglibdir = $(libdir)/abinit-fallbacks
pkglibexecdir = $(libexecdir)/abinit-fallbacks
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
subdir = .
DIST_COMMON = INSTALL NEWS README AUTHORS ChangeLog \
	$(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/configure $(am__configure_deps) COPYING \
	config/gnu/config.guess config/gnu/config.sub \
	config/gnu/install-sh config/gnu/missing \
	$(top_srcdir)/config/gnu/config.guess \
	$(top_srcdir)/config/gnu/config.sub \
	$(top_srcdir)/config/gnu/install-sh \
	$(top_srcdir)/config/gnu/missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/m4/auto-fallbacks.m4 \
	$(top_srcdir)/config/m4/conf-tricks.m4 \
	$(top_srcdir)/config/m4/data-files.m4 \
	$(top_srcdir)/config/m4/util-fixes.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /tigress/xingz/abinit-8.10.2/fallbacks/config/gnu/missing aclocal-1.13
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /tigress/xingz/abinit-8.10.2/fallbacks/config/gnu/missing autoconf
AUTOHEADER = ${SHELL} /tigress/xingz/abinit-8.10.2/fallbacks/config/gnu/missing autoheader
AUTOMAKE = ${SHELL} /tigress/xingz/abinit-8.10.2/fallbacks/config/gnu/missing automake-1.13
AWK = gawk
CC = mpiicc
CCDEPMODE = depmode=none
CFGFLAGS_ATOMPAW =  --with-linalg-libs="$(lib_linalg_libs)" --enable-libxc --with-libxc-incs="$(lib_libxc_incs)" --with-libxc-libs="$(lib_libxc_libs)" --enable-static --disable-shared
CFGFLAGS_BIGDFT = 
CFGFLAGS_ETSF_IO = 
CFGFLAGS_LIBXC = --enable-fortran --enable-static --disable-shared
CFGFLAGS_LINALG = 
CFGFLAGS_NETCDF = 
CFGFLAGS_WANNIER90 = 
CFLAGS = -g -O2
CFLAGS_ATOMPAW = -g -O2
CFLAGS_BIGDFT = -g -O2
CFLAGS_ETSF_IO = -g -O2
CFLAGS_LIBXC = -g -O2
CFLAGS_LINALG = -g -O2
CFLAGS_NETCDF = -g -O2
CFLAGS_WANNIER90 = -g -O2
CPP = 
CPPFLAGS = 
CPPFLAGS_ATOMPAW = 
CPPFLAGS_BIGDFT = 
CPPFLAGS_ETSF_IO = 
CPPFLAGS_LIBXC = 
CPPFLAGS_LINALG = 
CPPFLAGS_NETCDF = 
CPPFLAGS_WANNIER90 = 
CURL = curl
CXX = mpiicpc
CXXFLAGS_ATOMPAW = 
CXXFLAGS_BIGDFT = 
CXXFLAGS_ETSF_IO = 
CXXFLAGS_LIBXC = 
CXXFLAGS_LINALG = 
CXXFLAGS_NETCDF = 
CXXFLAGS_WANNIER90 = 
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"ABINIT-Fallbacks\" -DPACKAGE_TARNAME=\"abinit-fallbacks\" -DPACKAGE_VERSION=\"1.0\" -DPACKAGE_STRING=\"ABINIT-Fallbacks\ 1.0\" -DPACKAGE_BUGREPORT=\"https://bugs.launchpad.net/abinit/\" -DPACKAGE_URL=\"\" -DPACKAGE=\"abinit-fallbacks\" -DVERSION=\"1.0\"
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FC = mpiifort
FCFLAGS = -g
FCFLAGS_ATOMPAW = -g
FCFLAGS_BIGDFT = -g
FCFLAGS_ETSF_IO = -g
FCFLAGS_LIBXC = -g
FCFLAGS_LINALG = -g
FCFLAGS_NETCDF = -g
FCFLAGS_WANNIER90 = -g
FPPFLAGS_ATOMPAW = 
FPPFLAGS_BIGDFT = 
FPPFLAGS_ETSF_IO = 
FPPFLAGS_LIBXC = 
FPPFLAGS_LINALG = 
FPPFLAGS_NETCDF = 
FPPFLAGS_WANNIER90 = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = -L/usr/local/boost/1.55.0/lib64 -L/usr/local/fftw/intel-16.0/3.3.4/lib64
LDFLAGS_ATOMPAW = -L/usr/local/boost/1.55.0/lib64 -L/usr/local/fftw/intel-16.0/3.3.4/lib64
LDFLAGS_BIGDFT = -L/usr/local/boost/1.55.0/lib64 -L/usr/local/fftw/intel-16.0/3.3.4/lib64
LDFLAGS_ETSF_IO = -L/usr/local/boost/1.55.0/lib64 -L/usr/local/fftw/intel-16.0/3.3.4/lib64
LDFLAGS_LIBXC = -L/usr/local/boost/1.55.0/lib64 -L/usr/local/fftw/intel-16.0/3.3.4/lib64
LDFLAGS_LINALG = -L/usr/local/boost/1.55.0/lib64 -L/usr/local/fftw/intel-16.0/3.3.4/lib64
LDFLAGS_NETCDF = -L/usr/local/boost/1.55.0/lib64 -L/usr/local/fftw/intel-16.0/3.3.4/lib64
LDFLAGS_WANNIER90 = -L/usr/local/boost/1.55.0/lib64 -L/usr/local/fftw/intel-16.0/3.3.4/lib64
LIBOBJS = 
LIBS = 
LIBS_ATOMPAW =  -L$(fallbacks_instdir)/lib -lxcf90 -lxc 
LIBS_BIGDFT = 
LIBS_ETSF_IO =  
LIBS_LIBXC = 
LIBS_LINALG = 
LIBS_NETCDF = 
LIBS_WANNIER90 =  
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /tigress/xingz/abinit-8.10.2/fallbacks/config/gnu/missing makeinfo
MD5SUM = md5sum
MKDIR_P = /usr/bin/mkdir -p
OBJEXT = o
PACKAGE = abinit-fallbacks
PACKAGE_BUGREPORT = https://bugs.launchpad.net/abinit/
PACKAGE_NAME = ABINIT-Fallbacks
PACKAGE_STRING = ABINIT-Fallbacks 1.0
PACKAGE_TARNAME = abinit-fallbacks
PACKAGE_URL = 
PACKAGE_VERSION = 1.0
PATCH = patch
PATH_SEPARATOR = :
RANLIB = 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 1.0
WGET = wget
abinit_tardir = /home/xingz/.abinit/tarballs
abs_builddir = /tigress/xingz/abinit-8.10.2/fallbacks
abs_srcdir = /tigress/xingz/abinit-8.10.2/fallbacks
abs_top_builddir = /tigress/xingz/abinit-8.10.2/fallbacks
abs_top_srcdir = /tigress/xingz/abinit-8.10.2/fallbacks
ac_ct_CC = mpiicc
ac_ct_FC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -

# Package: atompaw
atompaw_pkg_name = atompaw-4.0.1.0
atompaw_pkg_string = AtomPAW version 4.0.1.0 (upstream release)

# Package: bigdft
bigdft_pkg_name = bigdft-1.7.1.25
bigdft_pkg_string = BigDFT library 1.7.1.25 (abinit)
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
enable_atompaw = yes
enable_bigdft = no
enable_etsf_io = no
enable_libxc = yes
enable_linalg = no
enable_netcdf = no
enable_wannier90 = no

# Package: etsf_io
etsf_io_pkg_name = etsf_io-1.0.4
etsf_io_pkg_string = ETSF I/O library 1.0.4 (upstream release)
exec_prefix = ${prefix}
fallbacks_instdir = /tigress/xingz/abinit-8.10.2/fallbacks/exports
fc_vendor = intel
fc_version = 18.0
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /tigress/xingz/abinit-8.10.2/fallbacks/config/gnu/install-sh
lib_atompaw_incs = 
lib_atompaw_libs = -L$(fallbacks_instdir)/lib -latompaw
lib_bigdft_incs = 
lib_bigdft_libs = 
lib_etsf_io_incs = 
lib_etsf_io_libs = 
lib_libxc_incs = -I$(fallbacks_instdir)/include
lib_libxc_libs = -L$(fallbacks_instdir)/lib -lxcf90 -lxc
lib_linalg_incs = 
lib_linalg_libs = 
lib_netcdf_incs = 
lib_netcdf_libs = 
lib_wannier90_incs = 
lib_wannier90_libs = 
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec

# Package: libxc
libxc_pkg_name = libxc-3.0.0
libxc_pkg_string = LibXC library 3.0.0 (upstream release)

# Package: linalg
linalg_pkg_name = lapack-abinit_6.10
linalg_pkg_string = Oldish BLAS/LAPACK implementation customized for Abinit
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)

# Package: netcdf
netcdf_pkg_name = netcdf-4.1.1
netcdf_pkg_string = NetCDF library 4.1.1 (upstream release)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /tigress/xingz/abinit-8.10.2
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = 
top_builddir = .
top_srcdir = .

# Package: wannier90
wannier90_pkg_name = wannier90-2.0.1.1
wannier90_pkg_string = Wannier90 program 2.0.1.1 (patched edition)
AM_CPPFLAGS = -I$(fallbacks_instdir)/include
EXTRA_DIST = \
	autogen.sh \
	wipeout.sh  \
	config/scripts/make-macros-fallbacks  \
	config/scripts/make-makefiles-fallbacks  \
	config/specs/fallbacks.conf  \
	config/wannier90/make-wannier90-patch  \
	config/wannier90/configure.ac  \
	config/wannier90/wannier90-1.2.mk \
	patches/libxc-2.0.1-0002.patch \
	patches/bigdft-1.2.0.2-0004.patch \
	patches/bigdft-abi-1.0.4-0006.patch \
	patches/wannier90-1.2-0001.patch \
	patches/atompaw-3.1.0.2-0001.patch \
	patches/atompaw-3.0.1.5-0001.patch \
	patches/bigdft-1.2.0.2-0001.patch \
	patches/atompaw-3.0.1.9-0001.patch \
	patches/wannier90-1.2-0002.patch \
	patches/bigdft-abi-1.0.4-0005.patch \
	patches/bigdft-abi-1.0.4-0002.patch \
	patches/bigdft-1.2.0.2-0005.patch \
	patches/atompaw-3.1.0.1-0001.patch \
	patches/bigdft-1.7.0.93-0001.patch \
	patches/bigdft-abi-1.0.4-0004.patch \
	patches/bigdft-abi-1.0.4-0003.patch \
	patches/atompaw-3.0.1.8-0001.patch \
	patches/bigdft-1.2.0.5-0001.patch \
	patches/libxc-2.0.1-0001.patch \
	patches/wannier90-1.2-0003.patch \
	patches/bigdft-abi-1.0.4-0007.patch \
	patches/bigdft-1.2.0.2-0002.patch \
	patches/bigdft-1.2.0.2-0003.patch \
	patches/libxc-1.1.0.1-0001.patch \
	transient/lapack-abinit_6.10.tar.gz

all: all-am

.SUFFIXES:
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
tags TAGS:

ctags CTAGS:

cscope cscopelist:


distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile all-local
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-local mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: all all-am all-local am--refresh check check-am check-local \
	clean clean-generic clean-local cscopelist-am ctags-am dist \
	dist-all dist-bzip2 dist-gzip dist-lzip dist-shar dist-tarZ \
	dist-xz dist-zip distcheck distclean distclean-generic \
	distcleancheck distdir distuninstallcheck dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
	pdf-am ps ps-am tags-am uninstall uninstall-am


-include config.mk

all-local:
	-$(MAKE) libxc
	@echo 'Checking build of libxc fallback'
	test -e stamps/libxc-install-stamp
	-$(MAKE) linalg
	@echo 'Checking build of linalg fallback'
	test -e stamps/linalg-install-stamp
	-$(MAKE) netcdf
	@echo 'Checking build of netcdf fallback'
	test -e stamps/netcdf-install-stamp
	-$(MAKE) atompaw
	@echo 'Checking build of atompaw fallback'
	test -e stamps/atompaw-install-stamp
	-$(MAKE) wannier90
	@echo 'Checking build of wannier90 fallback'
	test -e stamps/wannier90-install-stamp
	-$(MAKE) etsf_io
	@echo 'Checking build of etsf_io fallback'
	test -e stamps/etsf_io-install-stamp
	-$(MAKE) bigdft
	@echo 'Checking build of bigdft fallback'
	test -e stamps/bigdft-install-stamp

                    ########################################

libxc: stamps/libxc-install-stamp

stamps/libxc-install-stamp: stamps/libxc-build-stamp
	cd sources/$(libxc_pkg_name) && $(MAKE) install 
	@touch stamps/libxc-install-stamp

stamps/libxc-build-stamp: stamps/libxc-config-stamp
	cd sources/$(libxc_pkg_name) && $(MAKE) -j 1 
	@touch stamps/libxc-build-stamp

stamps/libxc-config-stamp: stamps/libxc-patch-stamp
	cd sources/$(libxc_pkg_name) && \
	  CPP="$(CPP)" \
	  CPPFLAGS="$(CPPFLAGS_LIBXC) $(INCLUDES)" \
	  CC="$(CC)" \
	  CFLAGS="$(CFLAGS_LIBXC)" \
	  CXX="$(CXX)" \
	  CXXFLAGS="$(CXXFLAGS_LIBXC)" \
          FCCPP="$(TRUE_CPP)" \
	  F77="$(FC)" \
	  FFLAGS="$(FCFLAGS_FIXEDFORM) $(FCFLAGS_LIBXC_EXT) $(FCFLAGS_LIBXC) $(INCLUDES)" \
	  F90="$(FC)" \
	  F90FLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_LIBXC_EXT) $(FCFLAGS_LIBXC) $(INCLUDES)" \
	  FC="$(FC)" \
	  FCFLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_LIBXC_EXT) $(FCFLAGS_LIBXC) $(INCLUDES)" \
	  LDFLAGS="$(FC_LDFLAGS_EXTRA) $(LDFLAGS_LIBXC)" \
	  LIBS="$(LIBS_LIBXC) " \
	  AR="$(AR)" \
	  ARFLAGS="$(ARFLAGS)" \
	  RANLIB="$(RANLIB)" \
	  ac_fc_srcext="F90" \
	  /bin/sh ./configure \
	    --prefix="$(fallbacks_instdir)" \
	    --bindir="$(fallbacks_instdir)/bin" \
	    --libdir="$(fallbacks_instdir)/lib" \
	    --program-suffix="-abinit" \
	    $(CFGFLAGS_LIBXC)
	@touch stamps/libxc-config-stamp

stamps/libxc-patch-stamp: stamps/libxc-unfold-stamp
	@echo "No patch to apply"
	@touch stamps/libxc-patch-stamp

stamps/libxc-unfold-stamp:
	cd sources && \
	  gzip -cd $(abinit_tardir)/$(libxc_pkg_name).tar.gz | tar xf -
	@touch stamps/libxc-unfold-stamp
#libxc:
#	@echo "The build of libxc has been disabled"
#	@touch stamps/libxc-install-stamp

                    ########################################

# Package clean-up: libxc
clean_libxc:
	rm -rf sources/libxc-3.0.0 stamps/libxc-*
	rm -rf exports/include/xc.h exports/include/xc_config.h exports/include/xc_funcs.h exports/include/xc_unconfig.h exports/include/xc_version.h
	rm -rf exports/lib/libxc.a exports/lib/libxcf90.a
	rm -rf exports/include/libxc_funcs_m.mod exports/include/xc_f90_lib_m.mod exports/include/xc_f90_types_m.mod

                    ########################################

#linalg: stamps/linalg-install-stamp

#stamps/linalg-install-stamp: stamps/linalg-build-stamp
#	cd sources/$(linalg_pkg_name) && $(MAKE) install 
#	@touch stamps/linalg-install-stamp

#stamps/linalg-build-stamp: stamps/linalg-config-stamp
#	cd sources/$(linalg_pkg_name) && $(MAKE) -j 5 
#	@touch stamps/linalg-build-stamp

#stamps/linalg-config-stamp: stamps/linalg-patch-stamp
#	cd sources/$(linalg_pkg_name) && \
#	  CPP="$(CPP)" \
#	  CPPFLAGS="$(CPPFLAGS_LINALG) $(INCLUDES)" \
#	  CC="$(CC)" \
#	  CFLAGS="$(CFLAGS_LINALG)" \
#	  CXX="$(CXX)" \
#	  CXXFLAGS="$(CXXFLAGS_LINALG)" \
#          FCCPP="$(TRUE_CPP)" \
#	  F77="$(FC)" \
#	  FFLAGS="$(FCFLAGS_FIXEDFORM) $(FCFLAGS_LINALG_EXT) $(FCFLAGS_LINALG) $(INCLUDES)" \
#	  F90="$(FC)" \
#	  F90FLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_LINALG_EXT) $(FCFLAGS_LINALG) $(INCLUDES)" \
#	  FC="$(FC)" \
#	  FCFLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_LINALG_EXT) $(FCFLAGS_LINALG) $(INCLUDES)" \
#	  LDFLAGS="$(FC_LDFLAGS_EXTRA) $(LDFLAGS_LINALG)" \
#	  LIBS="$(LIBS_LINALG) " \
#	  AR="$(AR)" \
#	  ARFLAGS="$(ARFLAGS)" \
#	  RANLIB="$(RANLIB)" \
#	  ac_fc_srcext="F90" \
#	  /bin/sh ./configure \
#	    --prefix="$(fallbacks_instdir)" \
#	    --bindir="$(fallbacks_instdir)/bin" \
#	    --libdir="$(fallbacks_instdir)/lib" \
#	    --program-suffix="-abinit" \
#	    $(CFGFLAGS_LINALG)
#	@touch stamps/linalg-config-stamp

#stamps/linalg-patch-stamp: stamps/linalg-unfold-stamp
#	@echo "No patch to apply"
#	@touch stamps/linalg-patch-stamp

#stamps/linalg-unfold-stamp:
#	cd sources && \
#	  gzip -cd $(abinit_tardir)/$(linalg_pkg_name).tar.gz | tar xf -
#	@touch stamps/linalg-unfold-stamp
linalg:
	@echo "The build of linalg has been disabled"
	@touch stamps/linalg-install-stamp

                    ########################################

# Package clean-up: linalg
clean_linalg:
	rm -rf sources/lapack-abinit_6.10 stamps/linalg-*
	rm -rf exports/include/lapacke.h
	rm -rf exports/lib/libblas.a exports/lib/liblapack.a
	rm -rf exports/include/elpa1

                    ########################################

#netcdf: stamps/netcdf-install-stamp

#stamps/netcdf-install-stamp: stamps/netcdf-build-stamp
#	cd sources/$(netcdf_pkg_name) && $(MAKE) install 
#	@touch stamps/netcdf-install-stamp

#stamps/netcdf-build-stamp: stamps/netcdf-config-stamp
#	cd sources/$(netcdf_pkg_name) && $(MAKE) -j 1 
#	@touch stamps/netcdf-build-stamp

#stamps/netcdf-config-stamp: stamps/netcdf-patch-stamp
#	cd sources/$(netcdf_pkg_name) && \
#	  CPP="$(CPP)" \
#	  CPPFLAGS="$(CPPFLAGS_NETCDF) $(INCLUDES)" \
#	  CC="$(CC)" \
#	  CFLAGS="$(CFLAGS_NETCDF)" \
#	  CXX="$(CXX)" \
#	  CXXFLAGS="$(CXXFLAGS_NETCDF)" \
#          FCCPP="$(TRUE_CPP)" \
#	  F77="$(FC)" \
#	  FFLAGS="$(FCFLAGS_FIXEDFORM) $(FCFLAGS_NETCDF_EXT) $(FCFLAGS_NETCDF) $(INCLUDES)" \
#	  F90="$(FC)" \
#	  F90FLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_NETCDF_EXT) $(FCFLAGS_NETCDF) $(INCLUDES)" \
#	  FC="$(FC)" \
#	  FCFLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_NETCDF_EXT) $(FCFLAGS_NETCDF) $(INCLUDES)" \
#	  LDFLAGS="$(FC_LDFLAGS_EXTRA) $(LDFLAGS_NETCDF)" \
#	  LIBS="$(LIBS_NETCDF) " \
#	  AR="$(AR)" \
#	  ARFLAGS="$(ARFLAGS)" \
#	  RANLIB="$(RANLIB)" \
#	  ac_fc_srcext="F90" \
#	  /bin/sh ./configure \
#	    --prefix="$(fallbacks_instdir)" \
#	    --bindir="$(fallbacks_instdir)/bin" \
#	    --libdir="$(fallbacks_instdir)/lib" \
#	    --program-suffix="-abinit" \
#	    $(CFGFLAGS_NETCDF)
#	@touch stamps/netcdf-config-stamp

#stamps/netcdf-patch-stamp: stamps/netcdf-unfold-stamp
#	@echo "No patch to apply"
#	@touch stamps/netcdf-patch-stamp

#stamps/netcdf-unfold-stamp:
#	cd sources && \
#	  gzip -cd $(abinit_tardir)/$(netcdf_pkg_name).tar.gz | tar xf -
#	@touch stamps/netcdf-unfold-stamp
netcdf:
	@echo "The build of netcdf has been disabled"
	@touch stamps/netcdf-install-stamp

                    ########################################

# Package clean-up: netcdf
clean_netcdf:
	rm -rf sources/netcdf-4.1.1 stamps/netcdf-*
	rm -rf exports/bin/nc-config-abinit exports/bin/nccopy-abinit exports/bin/ncdump-abinit exports/bin/ncgen-abinit exports/bin/ncgen3-abinit
	rm -rf exports/include/netcdf.h
	rm -rf exports/lib/libnetcdf.a
	rm -rf exports/include/netcdf.inc exports/include/netcdf.mod exports/include/typesizes.mod

                    ########################################

atompaw: stamps/atompaw-install-stamp

stamps/atompaw-install-stamp: stamps/atompaw-build-stamp
	cd sources/$(atompaw_pkg_name) && $(MAKE) install 
	@touch stamps/atompaw-install-stamp

stamps/atompaw-build-stamp: stamps/atompaw-config-stamp
	cd sources/$(atompaw_pkg_name) && $(MAKE) -j 1 
	@touch stamps/atompaw-build-stamp

stamps/atompaw-config-stamp: stamps/atompaw-patch-stamp
	cd sources/$(atompaw_pkg_name) && \
	  CPP="$(CPP)" \
	  CPPFLAGS="$(CPPFLAGS_ATOMPAW) $(INCLUDES)" \
	  CC="$(CC)" \
	  CFLAGS="$(CFLAGS_ATOMPAW)" \
	  CXX="$(CXX)" \
	  CXXFLAGS="$(CXXFLAGS_ATOMPAW)" \
          FCCPP="$(TRUE_CPP)" \
	  F77="$(FC)" \
	  FFLAGS="$(FCFLAGS_FIXEDFORM) $(FCFLAGS_ATOMPAW_EXT) $(FCFLAGS_ATOMPAW) $(INCLUDES)" \
	  F90="$(FC)" \
	  F90FLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_ATOMPAW_EXT) $(FCFLAGS_ATOMPAW) $(INCLUDES)" \
	  FC="$(FC)" \
	  FCFLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_ATOMPAW_EXT) $(FCFLAGS_ATOMPAW) $(INCLUDES)" \
	  LDFLAGS="$(FC_LDFLAGS_EXTRA) $(LDFLAGS_ATOMPAW)" \
	  LIBS="$(LIBS_ATOMPAW) $(lib_linalg_libs) $(lib_libxc_libs)" \
	  AR="$(AR)" \
	  ARFLAGS="$(ARFLAGS)" \
	  RANLIB="$(RANLIB)" \
	  ac_fc_srcext="F90" \
	  /bin/sh ./configure \
	    --prefix="$(fallbacks_instdir)" \
	    --bindir="$(fallbacks_instdir)/bin" \
	    --libdir="$(fallbacks_instdir)/lib" \
	    --program-suffix="-abinit" \
	    $(CFGFLAGS_ATOMPAW)
	@touch stamps/atompaw-config-stamp

stamps/atompaw-patch-stamp: stamps/atompaw-unfold-stamp
	@echo "No patch to apply"
	@touch stamps/atompaw-patch-stamp

stamps/atompaw-unfold-stamp:
	cd sources && \
	  gzip -cd $(abinit_tardir)/$(atompaw_pkg_name).tar.gz | tar xf -
	@touch stamps/atompaw-unfold-stamp
#atompaw:
#	@echo "The build of atompaw has been disabled"
#	@touch stamps/atompaw-install-stamp

                    ########################################

# Package clean-up: atompaw
clean_atompaw:
	rm -rf sources/atompaw-4.0.1.0 stamps/atompaw-*
	rm -rf exports/bin/atompaw-abinit exports/bin/graphatom-abinit
	rm -rf exports/lib/libatompaw.a

                    ########################################

#wannier90: stamps/wannier90-install-stamp

#stamps/wannier90-install-stamp: stamps/wannier90-build-stamp
#	cd sources/$(wannier90_pkg_name) && $(MAKE) install 
#	@touch stamps/wannier90-install-stamp

#stamps/wannier90-build-stamp: stamps/wannier90-config-stamp
#	cd sources/$(wannier90_pkg_name) && $(MAKE) -j 4 
#	@touch stamps/wannier90-build-stamp

#stamps/wannier90-config-stamp: stamps/wannier90-patch-stamp
#	cd sources/$(wannier90_pkg_name) && \
#	  CPP="$(CPP)" \
#	  CPPFLAGS="$(CPPFLAGS_WANNIER90) $(INCLUDES)" \
#	  CC="$(CC)" \
#	  CFLAGS="$(CFLAGS_WANNIER90)" \
#	  CXX="$(CXX)" \
#	  CXXFLAGS="$(CXXFLAGS_WANNIER90)" \
#          FCCPP="$(TRUE_CPP)" \
#	  F77="$(FC)" \
#	  FFLAGS="$(FCFLAGS_FIXEDFORM) $(FCFLAGS_WANNIER90_EXT) $(FCFLAGS_WANNIER90) $(INCLUDES)" \
#	  F90="$(FC)" \
#	  F90FLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_WANNIER90_EXT) $(FCFLAGS_WANNIER90) $(INCLUDES)" \
#	  FC="$(FC)" \
#	  FCFLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_WANNIER90_EXT) $(FCFLAGS_WANNIER90) $(INCLUDES)" \
#	  LDFLAGS="$(FC_LDFLAGS_EXTRA) $(LDFLAGS_WANNIER90)" \
#	  LIBS="$(LIBS_WANNIER90) $(lib_linalg_libs)" \
#	  AR="$(AR)" \
#	  ARFLAGS="$(ARFLAGS)" \
#	  RANLIB="$(RANLIB)" \
#	  ac_fc_srcext="F90" \
#	  /bin/sh ./configure \
#	    --prefix="$(fallbacks_instdir)" \
#	    --bindir="$(fallbacks_instdir)/bin" \
#	    --libdir="$(fallbacks_instdir)/lib" \
#	    --program-suffix="-abinit" \
#	    $(CFGFLAGS_WANNIER90)
#	@touch stamps/wannier90-config-stamp

#stamps/wannier90-patch-stamp: stamps/wannier90-unfold-stamp
#	@echo "No patch to apply"
#	@touch stamps/wannier90-patch-stamp

#stamps/wannier90-unfold-stamp:
#	cd sources && \
#	  gzip -cd $(abinit_tardir)/$(wannier90_pkg_name).tar.gz | tar xf -
#	@touch stamps/wannier90-unfold-stamp
wannier90:
	@echo "The build of wannier90 has been disabled"
	@touch stamps/wannier90-install-stamp

                    ########################################

# Package clean-up: wannier90
clean_wannier90:
	rm -rf sources/wannier90-2.0.1.1 stamps/wannier90-*
	rm -rf exports/bin/wannier90.x-abinit exports/bin/postw90.x-abinit exports/bin/w90chk2chk.x-abinit
	rm -rf exports/lib/libwannier90.a

                    ########################################

#etsf_io: stamps/etsf_io-install-stamp

#stamps/etsf_io-install-stamp: stamps/etsf_io-build-stamp
#	cd sources/$(etsf_io_pkg_name) && $(MAKE) install 
#	@touch stamps/etsf_io-install-stamp

#stamps/etsf_io-build-stamp: stamps/etsf_io-config-stamp
#	cd sources/$(etsf_io_pkg_name) && $(MAKE) -j 4 
#	@touch stamps/etsf_io-build-stamp

#stamps/etsf_io-config-stamp: stamps/etsf_io-patch-stamp
#	cd sources/$(etsf_io_pkg_name) && \
#	  CPP="$(CPP)" \
#	  CPPFLAGS="$(CPPFLAGS_ETSF_IO) $(INCLUDES)" \
#	  CC="$(CC)" \
#	  CFLAGS="$(CFLAGS_ETSF_IO)" \
#	  CXX="$(CXX)" \
#	  CXXFLAGS="$(CXXFLAGS_ETSF_IO)" \
#          FCCPP="$(TRUE_CPP)" \
#	  F77="$(FC)" \
#	  FFLAGS="$(FCFLAGS_FIXEDFORM) $(FCFLAGS_ETSF_IO_EXT) $(FCFLAGS_ETSF_IO) $(INCLUDES)" \
#	  F90="$(FC)" \
#	  F90FLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_ETSF_IO_EXT) $(FCFLAGS_ETSF_IO) $(INCLUDES)" \
#	  FC="$(FC)" \
#	  FCFLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_ETSF_IO_EXT) $(FCFLAGS_ETSF_IO) $(INCLUDES)" \
#	  LDFLAGS="$(FC_LDFLAGS_EXTRA) $(LDFLAGS_ETSF_IO)" \
#	  LIBS="$(LIBS_ETSF_IO) $(lib_netcdf_libs)" \
#	  AR="$(AR)" \
#	  ARFLAGS="$(ARFLAGS)" \
#	  RANLIB="$(RANLIB)" \
#	  ac_fc_srcext="F90" \
#	  /bin/sh ./configure \
#	    --prefix="$(fallbacks_instdir)" \
#	    --bindir="$(fallbacks_instdir)/bin" \
#	    --libdir="$(fallbacks_instdir)/lib" \
#	    --program-suffix="-abinit" \
#	    $(CFGFLAGS_ETSF_IO)
#	@touch stamps/etsf_io-config-stamp

#stamps/etsf_io-patch-stamp: stamps/etsf_io-unfold-stamp
#	@echo "No patch to apply"
#	@touch stamps/etsf_io-patch-stamp

#stamps/etsf_io-unfold-stamp:
#	cd sources && \
#	  gzip -cd $(abinit_tardir)/$(etsf_io_pkg_name).tar.gz | tar xf -
#	@touch stamps/etsf_io-unfold-stamp
etsf_io:
	@echo "The build of etsf_io has been disabled"
	@touch stamps/etsf_io-install-stamp

                    ########################################

# Package clean-up: etsf_io
clean_etsf_io:
	rm -rf sources/etsf_io-1.0.4 stamps/etsf_io-*
	rm -rf exports/bin/etsf_io-abinit
	rm -rf exports/lib/libetsf_io_low_level.a exports/lib/libetsf_io.a exports/lib/libetsf_io_utils.a

                    ########################################

#bigdft: stamps/bigdft-install-stamp

#stamps/bigdft-install-stamp: stamps/bigdft-build-stamp
#	cd sources/$(bigdft_pkg_name) && $(MAKE) install 
#	@touch stamps/bigdft-install-stamp

#stamps/bigdft-build-stamp: stamps/bigdft-config-stamp
#	cd sources/$(bigdft_pkg_name) && $(MAKE) -j 4 
#	@touch stamps/bigdft-build-stamp

#stamps/bigdft-config-stamp: stamps/bigdft-patch-stamp
#	cd sources/$(bigdft_pkg_name) && \
#	  CPP="$(CPP)" \
#	  CPPFLAGS="$(CPPFLAGS_BIGDFT) $(INCLUDES)" \
#	  CC="$(CC)" \
#	  CFLAGS="$(CFLAGS_BIGDFT)" \
#	  CXX="$(CXX)" \
#	  CXXFLAGS="$(CXXFLAGS_BIGDFT)" \
#          FCCPP="$(TRUE_CPP)" \
#	  F77="$(FC)" \
#	  FFLAGS="$(FCFLAGS_FIXEDFORM) $(FCFLAGS_BIGDFT_EXT) $(FCFLAGS_BIGDFT) $(INCLUDES)" \
#	  F90="$(FC)" \
#	  F90FLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_BIGDFT_EXT) $(FCFLAGS_BIGDFT) $(INCLUDES)" \
#	  FC="$(FC)" \
#	  FCFLAGS="$(FCFLAGS_FREEFORM) $(FCFLAGS_BIGDFT_EXT) $(FCFLAGS_BIGDFT) $(INCLUDES)" \
#	  LDFLAGS="$(FC_LDFLAGS_EXTRA) $(LDFLAGS_BIGDFT)" \
#	  LIBS="$(LIBS_BIGDFT) $(lib_linalg_libs) $(lib_netcdf_libs) $(lib_etsf_io_libs) $(lib_libxc_libs)" \
#	  AR="$(AR)" \
#	  ARFLAGS="$(ARFLAGS)" \
#	  RANLIB="$(RANLIB)" \
#	  ac_fc_srcext="F90" \
#	  /bin/sh ./configure \
#	    --prefix="$(fallbacks_instdir)" \
#	    --bindir="$(fallbacks_instdir)/bin" \
#	    --libdir="$(fallbacks_instdir)/lib" \
#	    --program-suffix="-abinit" \
#	    $(CFGFLAGS_BIGDFT)
#	@touch stamps/bigdft-config-stamp

#stamps/bigdft-patch-stamp: stamps/bigdft-unfold-stamp
#	@echo "No patch to apply"
#	@touch stamps/bigdft-patch-stamp

#stamps/bigdft-unfold-stamp:
#	cd sources && \
#	  gzip -cd $(abinit_tardir)/$(bigdft_pkg_name).tar.gz | tar xf -
#	@touch stamps/bigdft-unfold-stamp
bigdft:
	@echo "The build of bigdft has been disabled"
	@touch stamps/bigdft-install-stamp

                    ########################################

# Package clean-up: bigdft
clean_bigdft:
	rm -rf sources/bigdft-1.7.1.25 stamps/bigdft-*
	rm -rf exports/lib/libyaml.a exports/lib/libabinit.a exports/lib/libbigdft-1.a

                    ########################################
                    ########################################

check-local:
	-cd sources/$(libxc_pkg_name) && $(MAKE) check 
	-cd sources/$(linalg_pkg_name) && $(MAKE) check 
	-cd sources/$(netcdf_pkg_name) && $(MAKE) check 
	-cd sources/$(atompaw_pkg_name) && $(MAKE) check 
	-cd sources/$(wannier90_pkg_name) && $(MAKE) check 
	-cd sources/$(etsf_io_pkg_name) && $(MAKE) check 
	-cd sources/$(bigdft_pkg_name) && $(MAKE) check 

clean-local:
	rm -rf sources/* exports/* stamps/*

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
